{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/model-upload/model-upload.component.ts","./src/app/model-upload/model-upload.component.html","./src/app/model-webcam/model-webcam.component.ts","./src/app/model-webcam/model-webcam.component.html","./src/app/persons/person-details/person-details.component.ts","./src/app/persons/person-details/person-details.component.html","./src/app/persons/person-list/person-list.component.ts","./src/app/persons/person-list/person-list.component.html","./src/app/persons/person.model.ts","./src/app/persons/person.service.ts","./src/app/persons/persons.component.ts","./src/app/persons/persons.component.html","./src/app/persons/profile/profile.component.ts","./src/app/persons/profile/profile.component.html","./src/app/shared/custom_layers.ts","./src/app/shared/data-storage.service.ts","./src/app/shared/upload.service.ts","./src/environments/environment.ts","./src/main.ts","crypto (ignored)","node-fetch (ignored)","util (ignored)","webpack:///crypto (ignored)?33c0","string_decoder (ignored)","fs (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileComponent } from './persons/profile/profile.component';\r\nimport { ModelUploadComponent } from './model-upload/model-upload.component'\r\nimport { PersonListComponent } from './persons/person-list/person-list.component';\r\nimport { PersonsComponent } from './persons/persons.component';\r\nimport { ModelWebcamComponent } from './model-webcam/model-webcam.component';\r\n// import { SearchpersonsComponent } from './search-persons/search-persons.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'modelupload', component: ModelUploadComponent },\r\n  { path: '', redirectTo: 'person', pathMatch: 'full' },\r\n  { path: 'person', component: PersonsComponent },\r\n  { path: 'add', component: ProfileComponent },\r\n  { path: 'person/upload/:id', component: ModelUploadComponent },\r\n  { path: 'person/webcam/:id', component: ModelWebcamComponent },\r\n\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'waifu2angular';\r\n}\r\n","\r\n  <app-header></app-header>\r\n  <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <router-outlet></router-outlet>\r\n      \r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProfileComponent } from './persons/profile/profile.component';\r\nimport { ModelUploadComponent } from './model-upload/model-upload.component';\r\nimport { PersonListComponent } from './persons/person-list/person-list.component';\r\nimport { PersonDetailsComponent } from './persons/person-details/person-details.component';\r\nimport { PersonsComponent } from './persons/persons.component';\r\nimport { PersonService } from './persons/person.service';\r\nimport { HeaderComponent } from './header/header.component';\nimport { ModelWebcamComponent } from './model-webcam/model-webcam.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProfileComponent,\r\n    ModelUploadComponent,\r\n    PersonListComponent,\r\n    PersonDetailsComponent,\r\n    PersonsComponent,\r\n    HeaderComponent,\r\n    ModelWebcamComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule   \r\n  ],\r\n  providers: [ PersonService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"/person\">Waifu2Face</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        \n        <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"/person\" routerLinkActive=\"active\">Persons</a></li>\n        <li class=\"nav-item\"><a class=\"nav-link\"  routerLink=\"/add\" routerLinkActive=\"active\">New person</a></li>\n\n      \n      </ul>\n      <ul class=\"nav navbar-nav navbar-right\">\n        <!-- <li class=\"nav-item dropdown\"> -->\n\n            <!-- <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Manage\n            </a> -->\n            <!-- <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n              <a class=\"dropdown-item\" href=\"#\">Save Data</a>\n              <a class=\"dropdown-item\" href=\"#\">Fetch Data</a>\n            </div> -->\n          <!-- </li> -->\n\n      </ul>\n  \n    </div>\n  </nav>\n\n\n","import { Component, OnInit, ViewChild, ElementRef, Input, Output, OnChanges, AfterContentInit } from '@angular/core';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport { Prediction } from '../shared/prediction';\r\nimport {loadGraphModel} from '@tensorflow/tfjs-converter';\r\nimport { HardSwish, Relu6, Lambda } from '../shared/custom_layers';\r\nimport * as blazeface from '@tensorflow-models/blazeface'\r\nimport { imag } from '@tensorflow/tfjs';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { PersonService } from '../persons/person.service';\r\nimport { Person } from '../persons/person.model';\r\nimport { DataStorageService } from '../shared/data-storage.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\n\r\n\r\ntf.serialization.registerClass(HardSwish);  // Needed for serialization.\r\ntf.serialization.registerClass(Relu6);  // Needed for serialization.\r\ntf.serialization.registerClass(Lambda);  // Needed for serialization.\r\ntf.ENV.set('WEBGL_PACK', false);\r\n@Component({\r\n  selector: 'app-model-upload',\r\n  templateUrl: './model-upload.component.html',\r\n  styleUrls: ['./model-upload.component.css']\r\n})\r\n\r\nexport class ModelUploadComponent implements OnInit, AfterContentInit  {\r\n  imageSrc: string;\r\n  @ViewChild('personimg') imageEl: ElementRef; // img from db\r\n  // @ViewChild('imageEl_canvas') imageEl_canvas: ElementRef; //duplicate from db but canvas\r\n\r\n  @ViewChild('person2img_uploaded') imageEl2: ElementRef; //uploaded image\r\n  @ViewChild('cropped_canvas') imageCroppedCanvas: ElementRef; //cropped\r\n\r\n\r\n  private model;\r\n  private model_cropper;\r\n  private trashhold_cropper = 0.95;\r\n  predictions: tf.Tensor;\r\n  cropper: tf.Tensor;\r\n  \r\n  DJANGO_SERVER = 'http://192.168.1.113:8000'\r\n  loading: boolean;\r\n\r\n  person: Person = new Person(0,\"\",\"\",\"\",\"\",\"\");\r\n  // id: string;\r\n  subscription: Subscription;\r\n  persons;\r\n  checkdoor='not loaded';\r\n  form:FormGroup;\r\n\r\n  constructor( \r\n    private formBuilder: FormBuilder,\r\n    private personService: PersonService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dataStorageService: DataStorageService,\r\n    ) {\r\n  }\r\n  \r\n  ngAfterContentInit()\t{\r\n    this.getPerson(this.route.snapshot.paramMap.get('id'));\r\n    \r\n\r\n    // var img = document.getElementsByClassName('cont')[0];\r\n    // var canvas = this.imageCroppedCanvas.nativeElement; //document.createElement('canvas');\r\n    // var canvas = document.getElementById('img1canvas');\r\n    // var canvas = document.createElement('canvas');\r\n\r\n    //canvas.id = \"mycanvas\";\r\n    // var context = canvas.getContext('2d');    \r\n    // img.appendChild(canvas);\r\n    // context.drawImage(this.imageEl);\r\n\r\n  \r\n\r\n  }\r\n\r\n\r\n  async ngOnInit() {\r\n    this.form = this.formBuilder.group({\r\n      profile: ['']\r\n    });\r\n\r\n    this.loadModels();\r\n\r\n  }\r\n\r\n  // loads siamese model and cropper model\r\n  async loadModels(){ \r\n    this.loading = true;\r\n    console.log('loading model...');\r\n    \r\n    // const MODEL_URL = this.DJANGO_SERVER + '/media/cropper_model2/model.json';\r\n    // const cal = await loadGraphModel(MODEL_URL);\r\n    // this.model_cropper = cal\r\n    console.log(this.model_cropper);\r\n    this.model_cropper = await blazeface.load();\r\n   //this.model = await tf.loadLayersModel(this.DJANGO_SERVER + '/media/model.json')\r\n    \r\n    console.log(this.model_cropper);\r\n    this.model = await tf.loadLayersModel(this.DJANGO_SERVER + '/media/waifu2face/model.json')\r\n\r\n    console.log(this.model.summary());\r\n\r\n    \r\n\r\n    console.log('Sucessfully loaded model');\r\n    console.log(this.model)\r\n\r\n    this.loading = false;\r\n\r\n  }  \r\n\r\n\r\n\r\n  //when file uploaded\r\n  async fileChangeEvent(event) {\r\n\r\n\r\n    if (event.target.files && event.target.files[0]) {\r\n\r\n      if (event.target.files.length > 0) {\r\n        const file = event.target.files[0];\r\n        this.form.get('profile').setValue(file);\r\n      }\r\n      if (event.length === 0)\r\n      return;\r\n      var mimeType = event.target.files[0].type;\r\n      if (mimeType.match(/image\\/*/) == null) {\r\n        return;\r\n      }\r\n\r\n      //canvas for image 1\r\n      // var canvas = this.imageEl_canvas.nativeElement; //document.createElement('canvas');\r\n      // canvas.height = this.imageEl.nativeElement.offsetHeight;\r\n      // canvas.width = this.imageEl.nativeElement.offsetWidth;\r\n      // var context = canvas.getContext('2d');\r\n      // console.log(context)\r\n      // context.drawImage(this.imageEl.nativeElement,0,0);\r\n      // this.imageEl_canvas.nativeElement\r\n      // end of canvas for image 1\r\n\r\n      const reader = new FileReader();\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n\r\n      reader.onload = (res: any) => {\r\n        this.imageSrc = res.target.result;\r\n        setTimeout(async () => {\r\n          // const imgEl2 = this.imageEl2.nativeElement;\r\n          // const imgEl = this.imageEl.nativeElement;\r\n\r\n        \r\n          // this.cropper = await this.model_cropper.executeAsync((tf.browser.fromPixels(imgEl).expandDims()))\r\n          // const predictions = await this.model_cropper.estimateFaces(document.getElementById('image'), false)\r\n          \r\n          const predictions = await this.model_cropper.estimateFaces((this.imageEl2.nativeElement), false)\r\n          console.log(predictions);\r\n          \r\n\r\n          var img = document.getElementsByClassName('cont')[0];\r\n          var canvas = this.imageCroppedCanvas.nativeElement; \r\n\r\n          \r\n          \r\n          // img.appendChild(canvas);\r\n          \r\n\r\n          var context = canvas.getContext('2d');\r\n          var imageObj = new Image();\r\n          const start = predictions[0].topLeft;\r\n          const end = predictions[0].bottomRight;\r\n          const size = [(end[0] - start[0]) * 1.25 , (end[1] - start[1]) * 1.25];\r\n          console.log(size);\r\n          canvas.height = size[1] \r\n          canvas.width = size[0]\r\n\r\n          imageObj.onload = function() {\r\n            var sourceX = start[0];\r\n            var sourceY = start[1];\r\n            var sourceWidth = size[1];\r\n            var sourceHeight = size[0];\r\n            var destWidth = size[1];\r\n            var destHeight = size[0];\r\n            var destX = 0;\r\n            var destY = 0;\r\n\r\n            context.drawImage(imageObj, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight);\r\n          };\r\n          imageObj.src = this.imageEl2.nativeElement.src\r\n\r\n\r\n          console.log('mda');\r\n          console.log(this.imageEl.nativeElement);\r\n          console.log(this.imageCroppedCanvas.nativeElement);\r\n          console.log([tf.browser.fromPixels(this.imageEl.nativeElement).cast('float32').expandDims(), tf.browser.fromPixels(this.imageEl.nativeElement).cast('float32').expandDims()])\r\n          this.predictions = this.model.predict([tf.browser.fromPixels(this.imageEl.nativeElement).expandDims(), tf.browser.fromPixels(this.imageEl.nativeElement).expandDims()]);\r\n\r\n          console.log('final predict:');\r\n          console.log(this.predictions);\r\n          console.log(this.predictions.dataSync()[0]);\r\n          console.log(this.predictions[0]);\r\n\r\n          if(this.predictions[0]<0.5){ //change button\r\n            this.checkdoor='false';\r\n          } else this.checkdoor='true';\r\n\r\n          this.log_login(); //send log to server\r\n\r\n        }, 0);\r\n\r\n      };\r\n    }\r\n\r\n\r\n  }\r\n\r\n  response\r\n  log_login(){\r\n    this.dataStorageService.log_login(this.person, this.form.get('profile').value, this.checkdoor).subscribe(\r\n      (res) => {\r\n        this.response = res;  \r\n      },\r\n      (err) => {  \r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  //http get person by id in url\r\n  getPerson(id) {\r\n    console.log('getPerson called');\r\n    this.dataStorageService.get_person(id)\r\n      .subscribe(\r\n        data => {\r\n          this.person = data;\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n  \r\n\r\n\r\n}\r\n\r\n// async govno() {\r\n//   const predictions = await this.model_cropper.estimateFaces(document.getElementById('image'), false)\r\n//         console.log( predictions)\r\n\r\n        \r\n//         if (predictions.length > 0) {\r\n//           for (let i = 0; i < predictions.length; i++) {\r\n//             const start = predictions[i].topLeft;\r\n//             const end = predictions[i].bottomRight;\r\n//             const size = [end[0] - start[0], end[1] - start[1]];\r\n//             console.log(start, end, size)\r\n//             // // Render a rectangle over each detected face.\r\n//             // ctx.fillRect(start[0], start[1], size[0], size[1]);\r\n//           }\r\n//         }\r\n// }\r\n  // canvas: HTMLCanvasElement;\r\n  // context: CanvasRenderingContext2D;\r\n\r\n  // cropCal(){\r\n  //   let canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n  //   let context = canvas.getContext(\"2d\");\r\n  //   var imageObj = new Image();\r\n\r\n  //   imageObj.onload = function() {\r\n  //     // draw cropped image\r\n  //     var sourceX = 150;\r\n  //     var sourceY = 0;\r\n  //     var sourceWidth = 150;\r\n  //     var sourceHeight = 150;\r\n  //     var destWidth = sourceWidth;\r\n  //     var destHeight = sourceHeight;\r\n  //     var destX = canvas.width / 2 - destWidth / 2;\r\n  //     var destY = canvas.height / 2 - destHeight / 2;\r\n\r\n  //     context.drawImage(imageObj, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight);\r\n  //   };\r\n  //   imageObj.src = 'http://www.html5canvastutorials.com/demos/assets/darth-vader.jpg';   \r\n\r\n  //   this.canvas = canvas;\r\n  //   this.context = context;\r\n\r\n  // }\r\n\r\n","\r\n<div class=\"cont d-flex justify-content-center align-items-center flex-column\">\r\n  <h1> Login </h1>\r\n  <p><b>Name:</b> {{person.name}}</p>\r\n  <p><b>Job code:</b> {{person.jobcode}}</p>\r\n  <!-- <img src={{person.image_crop}} class=\"rounded mx-auto d-block mb-3\" style=\"max-width: 300px;\" #personimg> -->\r\n  <img crossorigin=\"anonymous\" src={{person.image_crop}} #personimg hidden> \r\n  <img src={{person.image_crop}} class=\"rounded mx-auto d-block mb-3\" style=\"max-width: 300px;\">\r\n\r\n\r\n  <!-- here goes imageEl_canvas\r\n  <canvas id=\"img1canvas\" #imageEl_canvas></canvas> -->\r\n\r\n  <div class=\"custom-file\">\r\n    <input type=\"file\" class=\"custom-file-input\" (change)=\"fileChangeEvent($event)\">\r\n    <label class=\"custom-file-label\">Choose file</label>\r\n  </div>\r\n\r\n  \r\n  <div *ngIf=\"loading; else elseBlock\">\r\n    <img src=\"./assets/loading.gif\">\r\n  </div>\r\n\r\n  <ng-template #elseBlock>\r\n    <img crossorigin=\"anonymous\" [src]=\"imageSrc\" id=\"image\" #person2img_uploaded *ngIf=\"imageSrc\" hidden/>\r\n    <img [src]=\"imageSrc\" class=\"rounded mx-auto d-block mt-3 mb-3\" style=\"max-width: 400px;\"/>\r\n  </ng-template>\r\n  \r\n  <canvas id=\"myCanvas\" #cropped_canvas class=\"rounded mx-auto d-block mb-3\"></canvas>\r\n  \r\n  <div class=\"list-group\">\r\n    <!-- <div class=\"list-group-item\" *ngFor=\"let prediction of predictions\"> -->\r\n      <!-- {{predictions}}  -->\r\n    <!-- </div> -->\r\n  </div>\r\n\r\n  <div class=\"align-middle\">\r\n    <button *ngIf=\"checkdoor==='true'\" class=\"btn btn-success mt-3\">Success</button>\r\n    <button *ngIf=\"checkdoor==='false'\" class=\"btn btn-danger mt-3\">Login error</button>\r\n\r\n  </div>\r\n</div>\r\n\r\n<!-- <canvas id=\"canvas\" width=\"578\" height=\"200\"></canvas> -->\r\n\r\n","import { Prediction } from './../shared/prediction';\r\nimport { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport {loadGraphModel} from '@tensorflow/tfjs-converter';\r\nimport { HardSwish, Relu6, Lambda } from '../shared/custom_layers';\r\nimport * as blazeface from '@tensorflow-models/blazeface'\r\nimport { imag } from '@tensorflow/tfjs';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\nimport { PersonService } from '../persons/person.service';\r\nimport { Person } from '../persons/person.model';\r\nimport { DataStorageService } from '../shared/data-storage.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\nimport * as mobilenet from '@tensorflow-models/mobilenet';\r\n\r\n\r\n@Component({\r\n  selector: 'app-model-webcam',\r\n  templateUrl: './model-webcam.component.html',\r\n  styleUrls: ['./model-webcam.component.css']\r\n})\r\nexport class ModelWebcamComponent implements OnInit, AfterViewInit {\r\n  imageSrc: string;\r\n  @ViewChild('personimg') imageEl: ElementRef; // img from db\r\n  // @ViewChild('imageEl_canvas') imageEl_canvas: ElementRef; //duplicate from db but canvas\r\n  @ViewChild('person2img_uploaded') imageEl2: ElementRef; //uploaded image\r\n  @ViewChild('cropped_canvas') imageCroppedCanvas: ElementRef; //cropped\r\n  private trashhold_cropper = 0.95;\r\n  cropper: tf.Tensor;\r\n  DJANGO_SERVER = 'http://192.168.1.113:8000'\r\n  person: Person = new Person(0,\"\",\"\",\"\",\"\",\"\");\r\n  // id: string;\r\n  subscription: Subscription;\r\n  persons;\r\n  checkdoor='not loaded';\r\n\r\n  @ViewChild('video') video: ElementRef;\r\n  predictions;\r\n  model: any;\r\n  private model_cropper;\r\n  loading = true;\r\n\r\n  constructor( private personService: PersonService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dataStorageService: DataStorageService,\r\n    ) {\r\n  }\r\n\r\n  async ngOnInit() {\r\n    // this.loadModels();\r\n    console.log('loading mobilenet model...');\r\n    this.model = await tf.loadLayersModel(this.DJANGO_SERVER + '/media/waifu2face/model.json')\r\n    // this.model = await mobilenet.load();\r\n\r\n    console.log('Sucessfully loaded model');\r\n    this.loading = false;\r\n\r\n\r\n\r\n    setInterval(async () => {\r\n      console.log('hui')\r\n      this.predictions = this.model.predict([tf.div(tf.browser.fromPixels(this.imageEl.nativeElement), 255).expandDims().cast('float32'), tf.div(tf.browser.fromPixels(this.video.nativeElement), 255).expandDims().cast('float32')]);\r\n      \r\n      if(this.predictions[0]<0.5){ //change button\r\n        this.checkdoor='false';\r\n      } else this.checkdoor='true';\r\n\r\n\r\n      console.log('predictions');\r\n      console.log(this.predictions);\r\n      // this.predictions = await this.model.classify(this.video.nativeElement);\r\n      await tf.nextFrame();\r\n    }, 3000);\r\n  }\r\n\r\n  async ngAfterViewInit() {\r\n    this.getPerson(this.route.snapshot.paramMap.get('id'));\r\n\r\n\r\n    const vid = this.video.nativeElement;\r\n\r\n    if (navigator.mediaDevices.getUserMedia) {\r\n      navigator.mediaDevices.getUserMedia({ video: true })\r\n        .then((stream) => {\r\n          vid.srcObject = stream;\r\n\r\n        })\r\n        .catch((err0r) => {\r\n          console.log('Something went wrong!');\r\n        });\r\n    }\r\n  }\r\n\r\n  async loadModels(){ \r\n    this.loading = true;\r\n    console.log('loading model...');\r\n    \r\n    // const MODEL_URL = this.DJANGO_SERVER + '/media/cropper_model2/model.json';\r\n    // const cal = await loadGraphModel(MODEL_URL);\r\n    // this.model_cropper = cal\r\n    console.log(this.model_cropper);\r\n    this.model_cropper = await blazeface.load();\r\n   //this.model = await tf.loadLayersModel(this.DJANGO_SERVER + '/media/model.json')\r\n    \r\n    console.log(this.model_cropper);\r\n    this.model = await tf.loadLayersModel(this.DJANGO_SERVER + '/media/waifu2face/model.json')\r\n\r\n    console.log(this.model.summary());\r\n\r\n    \r\n\r\n    console.log('Sucessfully loaded model');\r\n    console.log(this.model)\r\n\r\n    this.loading = false;\r\n\r\n  }  \r\n\r\n  getPerson(id) {\r\n    console.log('getPerson called');\r\n    this.dataStorageService.get_person(id)\r\n      .subscribe(\r\n        data => {\r\n          this.person = data;\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center align-items-center flex-column\">\n\n    <h1> Login </h1>\n    <p><b>Name:</b> {{person.name}}</p>\n    <p><b>Job code:</b> {{person.jobcode}}</p>\n    <!-- <img src={{person.image_crop}} class=\"rounded mx-auto d-block mb-3\" style=\"max-width: 300px;\" #personimg> -->\n    <img crossorigin=\"anonymous\" src={{person.image_crop}} #personimg>\n  \n\n    <video crossorigin=\"anonymous\" autoplay playsinline muted id=\"webcam\" width=\"300\" height=\"300\" #video></video>\n  \n    <div *ngIf=\"loading\">\n      <img src=\"./assets/loading.gif\">\n    </div>\n  \n    <div class=\"list-group\">\n      {{predictions}}\n      <!-- <div class=\"list-group-item\" *ngFor=\"let prediction of predictions\">\n        {{prediction.className}} - {{prediction.probability}}\n      </div> -->\n    </div>\n    <div class=\"align-middle\">\n      <button class=\"btn btn-success mt-3\">Success</button>\n      <button class=\"btn btn-danger mt-3\">Login error</button>\n\n      <!-- <button *ngIf=\"checkdoor==='true'\" class=\"btn btn-success mt-3\">Success</button>\n      <button *ngIf=\"checkdoor==='false'\" class=\"btn btn-danger mt-3\">Login error</button> -->\n  \n    </div>\n  </div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PersonService } from '../person.service';\r\nimport { Person } from '../person.model';\r\n \r\nimport { PersonListComponent } from '../person-list/person-list.component';\r\n \r\n//Elements inside persons list\r\n@Component({\r\n  selector: 'person-details',\r\n  templateUrl: './person-details.component.html',\r\n  styleUrls: ['./person-details.component.css']\r\n})\r\nexport class PersonDetailsComponent implements OnInit {\r\n \r\n  @Input() person: Person;\r\n  @Input() id: string;\r\n  @Input() index:number;\r\n  \r\n  constructor(private personService: PersonService, private listComponent: PersonListComponent) { }\r\n \r\n  ngOnInit() {\r\n    this.id=this.person.id;\r\n  }\r\n\r\n\r\n \r\n  // updateActive(isActive: boolean) {\r\n  //   this.personService.updateperson(this.person.id,\r\n  //     { name: this.person.name, jobcode: this.person.jobcode })\r\n  //     .subscribe(\r\n  //       data => {\r\n  //         console.log(data);\r\n  //         this.person = data as Person;\r\n  //       },\r\n  //       error => console.log(error));\r\n  // }\r\n \r\n  // deleteperson() {\r\n  //   this.personService.deleteperson(this.person.id)\r\n  //     .subscribe(\r\n  //       data => {\r\n  //         console.log(data);\r\n  //         this.listComponent.reloadData();\r\n  //       },\r\n  //       error => console.log(error));\r\n  // }\r\n \r\n}\r\n","\r\n<li class=\"list-group-item d-flex justify-content-between align-items-center\">  \r\n  <div *ngIf=\"person\">\r\n    <div class=\"row no-gutters\">\r\n      <div class=\"col-auto\">\r\n          <img src={{person.image_crop}} class=\"img-fluid\" alt={{person.name}} style=\"max-width: 100px;\">\r\n      </div>\r\n      <div class=\"col\">\r\n          <div class=\"card-block px-2\">\r\n              <h4 class=\"card-title\">{{person.name}}</h4>\r\n              <p class=\"card-text\">{{person.jobcode}}</p>\r\n\r\n              <button class=\"btn btn-info\" routerLink=\"upload/{{person.id}}\" routerLinkActive=\"active\">Login with upload</button> |\r\n              <button class=\"btn btn-warning\" routerLink=\"webcam/{{person.id}}\" routerLinkActive=\"active\">Login with webcam</button>\r\n\r\n          </div>\r\n      </div>\r\n  </div>\r\n </div>\r\n</li>","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subscription } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { PersonService } from '../person.service';\nimport { Person } from '../person.model';\nimport { DataStorageService } from '../../shared/data-storage.service';\n\n@Component({\n  selector: 'person-list',\n  templateUrl: './person-list.component.html',\n  styleUrls: ['./person-list.component.css']\n})\nexport class PersonListComponent implements OnInit {\n  // persons:any;\n  // persons: Observable<Person[]>;\n  persons;\n  subscription: Subscription;\n\n \n  constructor(private personService: PersonService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private dataStorageService: DataStorageService,\n    ) {\n}\n  async ngOnInit() {\n    \n    this.subscription = this.personService.personsChanged\n      .subscribe(\n        (persons: Person[]) => {\n          this.persons = persons;\n        }\n      );\n    // console.log(this.persons);\n\n    this.onFetchData();\n    \n    // this.getPersons();\n\n    // this.persons = this.personService.getpersons();\n\n  }\n\n  // getPersons() {\n  //   this.persondataService.list().subscribe(\n  //     // the first argument is a function which runs on success\n  //     data => {\n  //       this.persons = data;\n  //       // convert the dates to a nice format\n     \n  //     },\n  //     // the second argument is a function which runs on error\n  //     err => console.error(err),\n  //     // the third argument is a function which runs on completion\n  //     () => console.log('done loading persons')\n  //   );\n  // }\n \n  onFetchData() {\n    this.dataStorageService.fetchpersons();\n  }\n\n  // deletepersons() {\n  //   this.personService.deleteAll()\n  //     .subscribe(\n  //       data => {\n  //         console.log(data);\n  //         this.reloadData();\n  //       },\n  //       error => console.log('ERROR: ' + error));\n  // }\n\n\n\n \n  reloadData() {\n    // this.persons = this.personService.getAll()\n    \n    // this.persons = this.personService.getAll();\n\n    console.log('persons: ' + this.persons);\n  }\n \n}\n","<h1>Persons</h1>\r\n<ul class=\"list-group\">\r\n<person-details *ngFor=\"let person of persons\"\r\n[person]=\"person\"\r\n[index]=\"person.id\"\r\n >\r\n\r\n</person-details>\r\n</ul>\r\n<button (click)=\"onFetchData()\"></button>\r\n \r\n","export class Person {\r\n    public index:number;\r\n    public id:string;\r\n    public name: string;\r\n    public jobcode: string;\r\n    public image: string;\r\n    public image_crop: string;\r\n    \r\n  \r\n    constructor(index:number,id:string, name: string, jobcode: string, image: string, image_crop:string) {\r\n      this.index=index;\r\n      this.id=id;\r\n      this.name = name;\r\n      this.image = jobcode;\r\n      this.image = image;\r\n      this.image_crop = image_crop;\r\n  \r\n    }\r\n  }\r\n  ","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Person } from './person.model';\r\n\r\n\r\n@Injectable()\r\nexport class PersonService {\r\n  personsChanged = new Subject<Person[]>();\r\n  private persons: Person[] = [];\r\n\r\n  constructor() {}\r\n\r\n  setpersons(persons: Person[]) {\r\n    console.log(persons);\r\n    this.persons=persons;\r\n    this.personsChanged.next(this.persons.slice());\r\n  }\r\n\r\n  getpersons() {\r\n    return this.persons.slice();\r\n  }\r\n\r\n  getperson(index: number) {\r\n    \r\n    return this.persons[index];\r\n  }\r\n\r\n  getpersonbyID(id_person: string) {\r\n    \r\n    return this.persons.slice().filter(x => x.id == id_person)[0];\r\n  }\r\n\r\n  addperson(person: Person) {\r\n    this.persons.push(person);\r\n    this.personsChanged.next(this.persons.slice());\r\n  }\r\n\r\n  updateperson(index: number, newperson: Person) {\r\n    this.persons[index] = newperson;\r\n    this.personsChanged.next(this.persons.slice());\r\n  }\r\n\r\n  deleteperson(index: number) {\r\n    this.persons.splice(index, 1);\r\n    this.personsChanged.next(this.persons.slice());\r\n  }\r\n\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { PersonListComponent } from './person-list/person-list.component'\n\n@Component({\n  selector: 'app-persons',\n  templateUrl: './persons.component.html',\n  styleUrls: ['./persons.component.css']\n})\nexport class PersonsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n      <person-list></person-list>\n    </div>\n    <!-- <div class=\"col-md-7\">\n      <router-outlet></router-outlet>\n    </div> -->\n  </div>\n  ","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { UploadService } from '../../shared/upload.service';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { Person } from '../person.model';\r\nimport { PersonService } from '../person.service';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\n//FOR CREATION\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  person: Person;\r\n  id: number;\r\n\r\n  DJANGO_SERVER = 'http://192.168.1.113:8000'\r\n  form: FormGroup;\r\n  response;\r\n  imageURL;\r\n\r\n  public imagePath;\r\n  imgURL: any;\r\n  public message: string;\r\n\r\n  @ViewChild('nameInput', {static:false}) nameInputRef:ElementRef;\r\n  @ViewChild('jobcodeInput', {static:false}) jobcodeInputRef:ElementRef;\r\n  \r\n\r\n  constructor(private formBuilder: FormBuilder, private uploadService: UploadService,\r\n              private personService: PersonService,\r\n              private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n   \r\n\r\n    this.form = this.formBuilder.group({\r\n      profile: ['']\r\n    });\r\n  }\r\n\r\n  onChange(event, files) {\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.form.get('profile').setValue(file);\r\n    }\r\n    if (event.length === 0)\r\n    return;\r\n    var mimeType = files[0].type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      this.message = \"Only images are supported.\";\r\n      return;\r\n    }\r\n\r\n    var reader = new FileReader();\r\n    this.imagePath = files;\r\n    reader.readAsDataURL(files[0]); \r\n    reader.onload = (_event) => { \r\n      this.imgURL = reader.result; \r\n    }\r\n\r\n  }\r\n \r\n  onSubmit() {\r\n    const formData = new FormData();\r\n    //console.log(this.form.get('profile').value);\r\n    formData.append('image', this.form.get('profile').value);\r\n    formData.append('image_crop', this.form.get('profile').value);\r\n    formData.append('name', this.nameInputRef.nativeElement.value);\r\n    formData.append('jobcode', this.jobcodeInputRef.nativeElement.value);\r\n    // console.log(this.form.get('profile').value)\r\n    this.uploadService.upload(formData).subscribe(\r\n      (res) => {\r\n        this.response = res;\r\n        this.imageURL = `${this.DJANGO_SERVER}${res.image}`;\r\n   \r\n      },\r\n      (err) => {  \r\n        console.log(err);\r\n      }\r\n    );\r\n    this.router.navigate(['/person']);\r\n  }\r\n\r\n\r\n   \r\n\r\n}","<h1>Create new person</h1>\r\n<div>  \r\n\r\n\r\n  <!-- <div *ngIf=\"response && imageURL\">\r\n    <img [src]='imageURL' style=\"max-width: 300px;\" />\r\n  </div> -->\r\n\r\n \r\n\r\n<form (ngSubmit)=\"onSubmit()\">\r\n  <label for=\"name\">Name</label>\r\n  <input type=\"text\" id=\"name\" class=\"form-control\" #nameInput>\r\n\r\n  <label for=\"name\">Job code</label>\r\n  <input type=\"text\" id=\"jobcode\" class=\"form-control\" #jobcodeInput>\r\n  <label for=\"name\">Person image</label>\r\n  <img [src]=\"imgURL\" height=\"200\" *ngIf=\"imgURL\" class=\"rounded mx-auto d-block mb-3\">\r\n\r\n  <div class=\"input-group mb-3\">\r\n    <div class=\"custom-file\">\r\n      <input #file type=\"file\" class=\"custom-file-input\"  type=\"file\" id=\"customFile\" name=\"profile\" accept='image/*' (change)=\"onChange($event, file.files)\">\r\n      <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\r\n    </div>\r\n<!-- \r\n    <div class=\"input-group-prepend\">\r\n      <span class=\"input-group-text\">Upload image</span>\r\n    </div>\r\n\r\n    <div class=\"custom-file\">\r\n      <input #file type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile03\" name=\"profile\" accept='image/*' (change)=\"onChange($event, file.files)\">\r\n      <label class=\"custom-file-label\" for=\"inputGroupFile01\">{{imageURL}}</label>\r\n    </div> -->\r\n  </div>\r\n    <div class=\"row center\">\r\n      <button class=\"btn btn-danger btn-lg btn-block\" type=\"submit\">Create new person</button>\r\n    </div>\r\n \r\n\r\n    <!-- <div class=\"input-group mb-3\">\r\n    <div class=\"input-group-prepend\">\r\n        <button class=\"btn btn-outline-secondary\" type=\"submit\">Upload to server</button>\r\n    </div>\r\n    <div class=\"custom-file\">\r\n        <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile03\" name=\"profile\" (change)=\"onChange($event)\">\r\n        <label class=\"custom-file-label\" for=\"inputGroupFile03\">{{imageURL}}</label>\r\n    </div>\r\n    </div> -->\r\n</form>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\n\r\nexport class HardSwish extends tf.layers.Layer {\r\n\r\n  //return x * K.relu(x + 3.0, max_value=6.0) / 6.0\r\n  alpha:any;\r\n  // constructor(config) {\r\n  //   super(config);\r\n  //   this.alpha = config.alpha;\r\n  // }\r\n  constructor() {\r\n    super({})\r\n  }\r\n\r\n  call(input) {\r\n    return tf.tidy(() => {\r\n     \r\n      let x = input.cast('float32'); \r\n\r\n      return tf.mul(x, tf.relu6(x.add(3.0))).div(6.0);\r\n      //return tf.sigmoid(x.mul(this.alpha)).mul(x);\r\n    });\r\n  }\r\n\r\n  computeOutputShape(inputShape){\r\n    return inputShape;\r\n  }\r\n\r\n  static get className() {\r\n  return 'HardSwish';\r\n  }\r\n\r\n  getConfig() {\r\n    const config = {alpha: this.alpha};\r\n    const baseConfig = super.getConfig();\r\n    Object.assign(config, baseConfig);\r\n    return config;\r\n  }\r\n}\r\n\r\n\r\nexport class Relu6 extends tf.layers.Layer {\r\n\r\n  //return x * K.relu(x + 3.0, max_value=6.0) / 6.0\r\n  alpha:any;\r\n  // constructor(config) {\r\n  //   super(config);\r\n  //   this.alpha = config.alpha;\r\n  // }\r\n  constructor() {\r\n    super({})\r\n  }\r\n\r\n  call(input) {\r\n    return tf.tidy(() => {\r\n      const x = input.cast('float32');\r\n      return tf.relu6(x);\r\n      //return tf.sigmoid(x.mul(this.alpha)).mul(x);\r\n    });\r\n  }\r\n\r\n  computeOutputShape(inputShape){\r\n    return inputShape;\r\n  }\r\n\r\n  static get className() {\r\n  return 'Relu6';\r\n  }\r\n\r\n  getConfig() {\r\n    const config = {alpha: this.alpha};\r\n    const baseConfig = super.getConfig();\r\n    Object.assign(config, baseConfig);\r\n    return config;\r\n  }\r\n}\r\n\r\n\r\nexport class Lambda extends tf.layers.Layer {\r\n\r\n  alpha:any;\r\n\r\n  constructor() {\r\n    super({})\r\n  }\r\n\r\n\r\n  computeOutputShape(inputShape) {\r\n    console.log(inputShape)\r\n    return [1, 100]\r\n  }\r\n\r\n  call(input) {\r\n    return tf.tidy(() => {  \r\n      let x = input[0].cast('float32')\r\n      let y = input[1].cast('float32')\r\n      // let da = tf.sum(tf.square(tf.sub(input[0], input[1])), 1, true)\r\n      // console.log(tf.sqrt(tf.maximum(da, 0.0000001)))\r\n      console.log(tf.abs(tf.sub(x, y)).dtype)\r\n      // return tf.abs(tf.sub(x, y).cast('float32')).dataSync();\r\n      // return tf.squaredDifference(input[0], input[1]);\r\n      console.log('x,y from lambda')\r\n\r\n      console.log(x.dataSync(),y.dataSync())\r\n      return tf.sqrt(tf.sum((tf.square(tf.sub(x, y))), 1, true))\r\n    });\r\n  }\r\n\r\n  static get className() {\r\n    return 'Lambda';\r\n  }\r\n\r\n}\r\n\r\n\r\n   \r\n\r\n   \r\n   \r\n// export class HardSwish extends tf.layers.Layer {\r\n//     constructor() {\r\n//       super({});\r\n//       // TODO(bileschi): Can we point to documentation on masking here?\r\n//       this.supportsMasking = true;\r\n//     }\r\n  \r\n//     /**\r\n//      * This layer only works on 4D Tensors [batch, height, width, channels],\r\n//      * and produces output with twice as many channels.\r\n//      *\r\n//      * layer.computeOutputShapes must be overridden in the case that the output\r\n//      * shape is not the same as the input shape.\r\n//      * @param {*} inputShapes\r\n//      */\r\n//     computeOutputShape(inputShape) {\r\n//       return [inputShape[0], inputShape[1], inputShape[2], 2 * inputShape[3]]\r\n//     }\r\n  \r\n//     /**\r\n//      * Centers the input and applies the following function to every element of\r\n//      * the input.\r\n//      *\r\n//      *     x => [max(x, 0), max(-x, 0)]\r\n//      *\r\n//      * The theory being that there may be signal in the both negative and positive\r\n//      * portions of the input.  Note that this will double the number of channels.\r\n//      * @param inputs Tensor to be treated.\r\n//      * @param kwargs Only used as a pass through to call hooks.  Unused in this\r\n//      *   example code.\r\n//      */\r\n//     call(inputs, kwargs) {\r\n//       let input = inputs;\r\n//       if (Array.isArray(input)) {\r\n//         input = input[0];\r\n//       }\r\n//       this.invokeCallHook(inputs, kwargs);\r\n//       const origShape = input.shape;\r\n//       const flatShape =\r\n//           [origShape[0], origShape[1] * origShape[2] * origShape[3]];\r\n//       const flattened = input.reshape(flatShape);\r\n//       const centered = tf.sub(flattened, flattened.mean(1).expandDims(1));\r\n//       const pos = centered.relu().reshape(origShape);\r\n//       const neg = centered.neg().relu().reshape(origShape);\r\n//       return tf.concat([pos, neg], 3);\r\n//     }\r\n  \r\n//     /**\r\n//      * If a custom layer class is to support serialization, it must implement\r\n//      * the `className` static getter.\r\n//      */\r\n//     static get className() {\r\n//       return 'HardSwish';\r\n//     }\r\n//   }\r\n//   tf.serialization.registerClass(HardSwish);  // Needed for serialization.\r\n  \r\n\r\n   \r\n   \r\n   \r\n\r\n   \r\n   ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map,catchError, tap } from 'rxjs/operators';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { UploadService } from '../shared/upload.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Person } from '../persons/person.model';\r\nimport { PersonService } from '../persons/person.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DataStorageService {\r\n  constructor(private http: HttpClient, private personService: PersonService) {}\r\n  DJANGO_SERVER: string = \"http://192.168.1.113:8000\";\r\n  error = new Subject<string>();\r\n\r\n  storepersons() {\r\n    const persons = this.personService.getpersons();\r\n    this.http\r\n      .post(\r\n        `${this.DJANGO_SERVER}/api/persons`,\r\n        persons\r\n      )\r\n      .subscribe(response => {\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  fetchpersons() {\r\n  console.log('fetchpersons()');\r\n    \r\n  this.http\r\n  .get<Person[]>(\r\n    `${this.DJANGO_SERVER}/api/persons`\r\n  )\r\n  .pipe(\r\n    map(persons => {\r\n  \r\n      const posts = persons;\r\n        // convert the dates to a nice format\r\n      for (let post of posts) {\r\n        post.index\r\n        post.image = this.DJANGO_SERVER + post.image;\r\n        post.image_crop = this.DJANGO_SERVER + post.image_crop;\r\n      }\r\n      return persons;\r\n\r\n    })).subscribe((persons:Person[]) => {\r\n          console.log('fetch2')\r\n          console.log(persons)\r\n          this.personService.setpersons(persons);\r\n    });\r\n  }\r\n\r\n  get_person(id) {\r\n    return this.http.get<Person>(`${this.DJANGO_SERVER}/api/persons/one/${id}`).pipe(\r\n      map(person => {\r\n    \r\n        person.image = this.DJANGO_SERVER + person.image;\r\n        person.image_crop = this.DJANGO_SERVER + person.image_crop;\r\n        return person;\r\n      })\r\n\r\n    );\r\n  }\r\n\r\n  public upload(formData) {\r\n    return this.http.post<any>(`${this.DJANGO_SERVER}/api/persons/`, formData);\r\n  }\r\n\r\n  public log_login(person, image, checkdoor){\r\n    const formData = new FormData();\r\n    //console.log(this.form.get('profile').value);\r\n    formData.append('log_type', \"INFO\");\r\n    formData.append('action', \"login\");\r\n    formData.append('user', person.name);\r\n    formData.append('image', image);\r\n    formData.append('body', checkdoor);\r\n    // console.log(image)\r\n    // console.log(formData)\r\n    \r\n    return this.http.post<any>(`${this.DJANGO_SERVER}/api/log/`, formData);\r\n  }\r\n\r\n//   persons:Person[];\r\n//   getAll() {\r\n//     return this.http\r\n//     .get<Person[]>(\r\n//       `${this.DJANGO_SERVER}/api/persons`\r\n//     )\r\n//     .pipe(\r\n//       map(persons => {\r\n    \r\n//         const posts = persons;\r\n//           // convert the dates to a nice format\r\n//         for (let post of posts) {\r\n//           post.index\r\n//           post.image = this.DJANGO_SERVER + post.image;\r\n//           post.image_crop = this.DJANGO_SERVER + post.image_crop;\r\n//         }\r\n//         return persons;\r\n  \r\n//       }))\r\n//   }\r\n// // person_one:Person;\r\n//   public getPersonByID(id){\r\n//     return this.http.get<Person>(\r\n//       `${this.DJANGO_SERVER}/api/persons/one/${id}`\r\n//     )\r\n//     // .subscribe((persons:Person) => {\r\n//     //   console.log(persons);\r\n//     //   // this.person_one=persons;\r\n//     //     return persons;\r\n//     //   });\r\n\r\n//     // return this.person_one\r\n//   }\r\n\r\n//   getNews(id: number) {\r\n//     return this.getAll().map((data: any) => data.data.data.find(news => news.id === id))\r\n//   }\r\n\r\n\r\n  // createPerson() {\r\n  \r\n  //   const formData = new FormData();\r\n  //   //console.log(this.form.get('profile').value);\r\n  //   formData.append('image', this.form.get('profile').value);\r\n\r\n  //   this.uploadService.upload(formData).subscribe(\r\n  //     (res) => {\r\n  //       this.response = res;\r\n  //       this.imageURL = `${this.DJANGO_SERVER}${res.image}`;\r\n  //       console.log(res);\r\n  //       console.log(this.imageURL);\r\n  //     },\r\n  //     (err) => {  \r\n  //       console.log(err);\r\n  //     }\r\n  //   );\r\n  // }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UploadService {\r\n\r\n  DJANGO_SERVER: string = \"http://192.168.1.113:8000\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public upload(formData) {\r\n    return this.http.post<any>(`${this.DJANGO_SERVER}/api/persons/`, formData);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}